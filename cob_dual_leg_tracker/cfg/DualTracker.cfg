#!/usr/bin/env python
PACKAGE = 'cob_dual_leg_tracker'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


# Visualization Parameters
gen.add('publish_measurements_visualizations',         bool_t,     0, '',    True)
gen.add('publish_measurements_visualizations_debug',   bool_t,     0, '',    True)

gen.add('publish_leg_visualizations',                  bool_t,     0, '',    True)
gen.add('publish_leg_visualizations_debug',            bool_t,     0, '',    True)

gen.add('publish_people_visualizations',               bool_t,     0, '',    True)
gen.add('publish_people_visualizations_debug',         bool_t,     0, '',    True)

gen.add('publish_particles_visualizations_debug',      bool_t,     0, '',    False)


gen.add('connection_threshold',             double_t,   0, '[m]', 0.0792, 0.02, .2)
gen.add('min_points_per_group',             int_t,      0, '',    4,    3, 20)


gen.add('leg_reliability_limit',            double_t,   0, '',    0.64,  0, 1)
gen.add('new_track_min_probability',        double_t,   0, '',    0.9,  0, 1)

# Detection publishing Parameters
gen.add('people_probability_limit',         double_t,   0, '',    0.9,  0, 1)
gen.add('use_static_detections',			bool_t, 	0, '',	False)


gen.add('no_observation_timeout',           double_t,   0, '[s]', 1.2,  0, 5) #Timeout tolerance for no observations
gen.add('max_meas_jump',                    double_t,   0, '[m]', 0.75, 0, 5)
gen.add('fixed_frame',                      str_t,      0, 'Fixed Frame', 'odom_combined')
gen.add('use_fake_measurements',            bool_t,     0, '',    False)


gen.add('fake_leg_probability',                   double_t,   0, '', 0.95, 0, 1.0)
gen.add('fake_leg_min_person_probability',        double_t,   0, '', 0.60, 0, 1.0)
gen.add('fake_leg_real_leg_distance',             double_t,   0, '', 0.10, 0, 1.0)
gen.add('fake_leg_range_thres',                   double_t,   0, '', 2.00, 0, 3.0)
gen.add('fake_leg_measurement_probabilty_factor', double_t,   0, '', 1.00, 0, 3.0)
gen.add('min_update_probability',                 double_t,   0, '',0.003, 0, 0.01)


# Leg Feature properties
gen.add('leg_feature_update_cov',                   double_t,   0, '',    0.05,      0.001, 0.5)
gen.add('leg_feature_predict_pos_cov',              double_t,   0, '',    0.2,       0.001, 0.5)
gen.add('leg_feature_predict_vel_cov',              double_t,   0, '',    1.2,       0.001, 2)
gen.add('leg_feature_measurement_cov',              double_t,   0, '',    0.004,     0.001, 0.01)
gen.add('initial_leg_feature_predict_pos_cov',      double_t,   0, '',    0.2,       0.001, 2.0)
gen.add('initial_leg_feature_predict_vel_cov',      double_t,   0, '',    1.5,       0.001, 2.0)
gen.add('min_people_probability_for_hl_prediction', double_t,   0, '',    0.6,       0.01,  1.0)
gen.add('static_threshold_distance',                double_t,   0, '[m]', 0.4,       0.01,  3.0)

# Filter properties
gen.add('v_max',                                    double_t,   0, '[m/s]', 4.0,     0.01,  10.0)
gen.add('position_factor',                          double_t,   0, '',      0.8,     0.01,  5.0)
gen.add('velocity_factor',                          double_t,   0, '[m/s]', 1.6,     0.01,  5.0)


exit(gen.generate(PACKAGE, 'dual_tracker', 'DualTracker'))
